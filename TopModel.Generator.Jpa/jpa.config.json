{
  "type": "object",
  "description": "Config pour la génération de Jpa.",
  "additionalProperties": false,
  "required": ["tags", "outputDirectory"],
  "properties": {
    "language": {
      "type": "string",
      "description": "Langage du générateur, utilisé pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs. Par défaut : 'java'."
    },
    "tags": {
      "type": "array",
      "description": "Précise les tags de fichier que le générateur doit lire",
      "items": {
        "type": "string",
        "description": "Catégorie de fichier que le générateur doit lire."
      }
    },
    "variables": {
      "type": "object",
      "description": "Définitions de variables à utiliser dans les différents paramètres du générateur.",
      "patternProperties": {
        ".+": {
          "type": "string"
        }
      }
    },
    "tagVariables": {
      "type": "object",
      "description": "Définitions de variables par tag à utiliser dans les différents paramètres du générateur.",
      "patternProperties": {
        ".*": {
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "string"
            }
          }
        }
      }
    },
    "disable": {
      "type": "array",
      "description": "Désactive les générateurs demandés",
      "items": {
        "type": "string",
        "enum": [
          "JpaModelGen",
          "JpaInterfaceGen",
          "JpaMapperGenerator",
          "JpaDaoGen",
          "JpaEnumGenerator",
          "JpaResourceGen",
          "SpringApiServerGen",
          "SpringApiClientGen"
        ]
      }
    },
    "outputDirectory": {
      "type": "string",
      "description": "Racine du répertoire de génération."
    },
    "translateReferences": {
      "type": "boolean",
      "description": "Si les libellés des listes de références doivent être traduits.",
      "default": "true"
    },
    "translateProperties": {
      "type": "boolean",
      "description": "Si les libellés des propriétés doivent être traduits.",
      "default": "true"
    },
    "ignoreDefaultValues": {
      "type": "boolean",
      "description": "Désactive la génération des valeurs par défaut des propriétés dans les classes et endpoints générés avec cette configuration."
    },
    "entitiesPath": {
      "type": "string",
      "description": "Localisation des classes persistées du modèle, relative au répertoire de génération. Par défaut, 'javagen:{app}/entities/{module}'."
    },
    "daosPath": {
      "type": "string",
      "description": "Localisation des DAOs, relative au répertoire de génération."
    },
    "dtosPath": {
      "type": "string",
      "description": "Localisation des classes non persistées du modèle, relative au répertoire de génération. Par défaut, 'javagen:{app}/dtos/{module}'."
    },
    "enumsPath": {
      "type": "string",
      "description": "Localisation des enums du modèle, relative au répertoire de génération.",
      "default": "javagen:{app}/enums/{module}"
    },
    "enumConverterPath": {
      "type": "string",
      "description": "Localisation des converters des enums du modèle, relative au répertoire de génération.",
      "default": "javagen:{app}/converters/{module}"
    },
    "apiPath": {
      "type": "string",
      "description": "Localisation du l'API générée (client ou serveur), relative au répertoire de génération. Par défaut, 'javagen:{app}/api/{module}'.",
      "default": "javagen:{app}/api/{module}"
    },
    "compositionConverterCanonicalName": {
      "type": "string",
      "description": "Nom complet de la classe permettant de convertir les compositions stockées en json dans la bdd. Supporte le template {package} et {class}",
      "default": "{package}.{class}Converter"
    },
    "apiGeneration": {
      "oneOf": [
        {
          "type": "string",
          "description": "Mode de génération de l'API ('Client' ou 'Server')",
          "enum": ["Client", "Server"]
        },
        {
          "type": "string",
          "description": "Mode de génération de l'API ('Client' ou 'Server')",
          "pattern": "^\\{[^\\}]+\\}$"
        }
      ]
    },
    "clientApiGeneration": {
      "oneOf": [
        {
          "type": "string",
          "description": "Mode de génération de l'API Client ('Client' ou 'Server')",
          "default": "RestClient",
          "enum": ["RestTemplate", "RestClient"]
        },
        {
          "type": "string",
          "description": "Mode de génération de l'API ('RestTemplate' ou 'RestClient')",
          "default": "RestClient",
          "pattern": "^\\{[^\\}]+\\}$"
        }
      ]
    },
    "resourcesPath": {
      "type": "string",
      "description": "Localisation des ressources, relative au répertoire de génération."
    },
    "resourcesEncoding": {
      "type": "string",
      "description": "Encodage des fichiers de resource.",
      "default": "Latin1",
      "enum": ["Latin1", "UTF8"]
    },
    "useJdbc": {
      "type": "boolean",
      "description": "Générer les entités en mode JDBC",
      "default": "false"
    },
    "daosAbstract": {
      "type": "boolean",
      "description": " Génération d'interface Abstract avec @NoRepositoryBean permettant de mettre à jour le code généré",
      "default": "false"
    },
    "daosInterface": {
      "type": "string",
      "description": "Précise l'interface des Daos générés.",
      "default": "false"
    },
    "mappersInClass": {
      "type": "boolean",
      "description": "Indique s'il faut ajouter les mappers en tant méthode ou constructeur dans les classes qui les déclarent"
    },
    "dataFlowsPath": {
      "type": "string",
      "description": "Localisation des flux de données générés."
    },
    "dataFlowsBulkSize": {
      "type": "number",
      "description": "Taille des chunks à extraire et insérer"
    },
    "dataFlowsListeners": {
      "type": "array",
      "description": "Listeners à ajouter à tous les dataflows",
      "items": {
        "type": "string",
        "description": "Listener à ajouter à tous les dataflows"
      }
    },
    "dbSchema": {
      "type": "string",
      "description": "Nom du schéma sur lequel les entités sont sauvegardées"
    },
    "enumShortcutMode": {
      "type": "boolean",
      "description": "Option pour générer des getters et setters vers l'enum des références plutôt que sur la table",
      "default": "false"
    },
    "enumsAsEnum": {
      "type": "boolean",
      "description": "Option pour remplacer les classes de listes de références par des enums",
      "default": "false"
    },
    "associationAdders": {
      "type": "boolean",
      "description": "Option pour générer des méthodes d'ajouts pour les associations oneToMany et manyToMany. Ces méthodes permettent de synchroniser les objets ajoutés",
      "default": "false"
    },
    "associationRemovers": {
      "type": "boolean",
      "description": "Option pour générer des méthodes de suppression pour les associations oneToMany et manyToMany. Ces méthodes permettent de synchroniser les objets supprimés",
      "default": "false"
    },
    "generatedHint": {
      "type": "boolean",
      "description": "Option pour générer l'annotation @Generated('TopModel : https://github.com/klee-contrib/topmodel')",
      "default": "true"
    },
    "fieldsEnum": {
      "type": "string",
      "description": "Option pour générer une enum des champs des classes persistées",
      "default": "None",
      "enum": ["None", "Persisted", "Dto", "Persisted_Dto"]
    },
    "fieldsEnumInterface": {
      "type": "string",
      "description": "Précise l'interface des fields enum générés."
    },
    "persistenceMode": {
      "type": "string",
      "description": "Mode de génération de la persistence ('Javax' ou 'Jakarta')",
      "enum": ["javax", "jakarta"]
    },
    "identity": {
      "type": "object",
      "description": "Options de génération de la séquence",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode de génération des séquences.",
          "enum": ["none", "sequence", "identity"],
          "default": "identity"
        },
        "increment": {
          "type": "number",
          "description": "Incrément de la séquence générée."
        },
        "start": {
          "type": "number",
          "description": "Début de la séquence générée."
        }
      }
    }
  }
}
